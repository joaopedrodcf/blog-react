{"version":3,"sources":["components/Header/Logo/logo.png","style.js","components/Header/HeaderMobile/style.js","components/Header/CloseButton/style.js","components/Header/Links/style.js","components/Header/Links/Links.js","components/Header/LogButton/style.js","components/Header/LogButton/LogButton.js","components/Header/CloseButton/CloseButton.js","components/Header/HeaderMobile/HeaderMobile.js","components/Header/HeaderWrapper/style.js","components/Header/Nav/style.js","components/Header/Nav/Nav.js","components/Header/Logo/style.js","components/Header/Logo/Logo.js","components/Header/HamburguerButton/style.js","components/Header/HamburguerButton/HamburguerButton.js","components/Header/HeaderWrapper/HeaderWrapper.js","components/Header/Header.js","actions/actionsTypes.js","services/api.js","actions/index.js","components/Header/HeaderContainer.js","components/Main/style.js","components/Main/Home/style.js","components/Main/Post/style.js","components/Main/Post/Post.js","components/Main/Home/Home.js","components/Main/PostDetailed/style.js","components/Main/Forms/style.js","components/Main/Forms/CommentFormik.js","components/Main/PostDetailed/PostDetailed.js","components/Main/Forms/ContactFormik.js","components/Main/Forms/RegisterFormik.js","components/Main/Forms/CreatePostFormik.js","components/Main/Forms/LoginFormik.js","components/Main/Main.js","components/Main/MainContainer.js","components/Footer/style.js","components/Footer/Links/style.js","components/Footer/Links/Links.js","components/Footer/Footer.js","theme.js","Routes.js","reducers/index.js","globalStyle.js","index.js"],"names":["module","exports","__webpack_require__","p","Global","styled","div","_templateObject","Wrapper","style_templateObject","props","theme","color","blue","dark","toogle","space","lg","Container","CloseButton_style_templateObject","Button","button","_templateObject2","md","typography","xxl","white","Link","NavLink","attrs","activeClassName","Links_style_templateObject","Links","_ref","isAuthenticated","react_default","a","createElement","Fragment","Links_style","exact","to","LogButton_style_templateObject","xs","default","light","LogButton","logoutRedux","email","LogButton_style","onClick","CloseButton","handleClick","className","Header_Links_Links","Header_LogButton_LogButton","HeaderMobile","HeaderMobile_style","Header_CloseButton_CloseButton","HeaderWrapper_style_templateObject","shadow","nav","Nav_style_templateObject","Nav","Nav_style","defaultProps","Img","img","Logo_style_templateObject","Logo","Logo_style","src","image","alt","HamburguerButton_style_templateObject","HamburguerButton","HamburguerButton_style","HeaderWrapper","HeaderWrapper_style","es_Link","Header_Logo_Logo","Header_Nav_Nav","Header_HamburguerButton_HamburguerButton","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","event","preventDefault","setState","Header_HeaderWrapper_HeaderWrapper","assign","Header_HeaderMobile_HeaderMobile","React","Component","actionTypes","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","REGISTER_START","REGISTER_SUCCESS","REGISTER_ERROR","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_ERROR","urlLogin","concat","process","urlRegister","urlPost","urlContact","urlGetPosts","urlGetPost","urlCreateComment","login","password","dispatch","type","axios","post","then","response","localStorage","setItem","data","token","loginService","payload","loginSuccess","err","loginError","register","registerService","registerSuccess","console","log","registerError","logout","removeItem","withRouter","connect","ownProps","main","Main_style_templateObject","ContainerPages","Home_style_templateObject","gray","PaginationButton","style_templateObject2","active","sm","Post_style_templateObject","FigureContainer","Post_style_templateObject2","Figure","_templateObject3","black","Article","_templateObject4","xl","LinkPost","_templateObject5","_templateObject6","Post","_id","title","date","description","author","Post_style_Container","Date","toDateString","formatDate","style_Button","Home","posts","currentPage","totalPages","getPostsPagination","endpoint","url","page","isMinus","isPlus","_this2","curPage","get","getPostsService","current","pages","_this3","_this$state","buttons","_loop","i","push","key","map","Main_Post_Post","PostDetailed_style_templateObject","PostDetailed_style_templateObject2","style_templateObject3","style_templateObject4","Comment","style_templateObject5","CommentSection","style_templateObject6","borderRadius","shadowBlack","colorWhite","Forms_style_templateObject","WrapperTitle","Forms_style_templateObject2","Form","form","Forms_style_templateObject3","Forms_style_templateObject4","Forms_style_templateObject5","Label","label","Forms_style_templateObject6","ErrorLabel","span","_templateObject7","red","xxs","_templateObject8","WrapperButton","_templateObject9","Input","input","_templateObject10","TextArea","textarea","_templateObject11","Alert","_templateObject12","error","Image","_templateObject13","LabelFile","_templateObject14","createComment","values","postId","resetForm","text","params","URLSearchParams","append","config","headers","x-access-token","getItem","Content-Type","createCommentService","CommentFormik","_ref2","Forms_style_Wrapper","formik_esm","initialValues","validate","errors","onSubmit","_len","arguments","length","rest","Array","_key","apply","render","_ref3","touched","handleChange","handleBlur","handleSubmit","isSubmitting","dirty","htmlFor","name","placeholder","onChange","onBlur","value","Forms_style_Button","disabled","keys","PostDetailed","comments","getPost","id","match","PostDetailed_style_Container","style_Article","style_FigureContainer","style_Figure","Forms_CommentFormik","comment","sendMessage","message","contactService","ContactFormik","test","Forms_style_Figure","RegisterFormik","errorMessage","createPost","formData","FormData","createPostService","document","querySelector","CreatePostFormik","file","URL","createObjectURL","target","files","setFieldValue","imagePreview","currentTarget","LoginFormik","RouteUnauthenticated","objectWithoutProperties","Redirect","Route","RouteAuthenticated","Main","Main_style","Switch","path","component","Main_RouteUnauthenticated","Forms_LoginFormik","Forms_RegisterFormik","Main_RouteAuthenticated","Forms_CreatePostFormik","footer","Footer_style_templateObject","Footer_Links_style_templateObject","Footer_Links_style","href","Footer","Footer_style","Footer_Links_Links","yellow","xxxl","Routes","styled_components_browser_esm","style","HeaderContainer","MainContainer","components_Footer_Footer","authentication","undefined","action","objectSpread","injectGlobal","globalStyle_templateObject","initialState","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunkMiddleware","logger","ReactDOM","es","HashRouter","src_Routes","getElementById"],"mappings":"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","file":"static/js/main.dcc9c1e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d6d2ea7c.png\";","import styled from 'styled-components';\n\nconst Global = styled.div`\n    display: grid;\n    grid-template-columns: 3fr 10fr 3fr;\n    grid-template-rows: 60px auto 90px;\n    grid-template-areas: 'header header header' ' . main . ' 'footer footer footer';\n    grid-gap: 20px;\n    height: 100%;\n\n    @media (max-width: 1200px) {\n        grid-template-columns: 2fr 10fr 2fr;\n    }\n\n    @media (max-width: 600px) {\n        grid-template-columns: 0.1fr 12fr 0.1fr;\n    }\n`;\nexport default Global;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background-color: ${props => props.theme.color.blue.dark};\n    position: absolute;\n    height: 100vh;\n    width: 100vw;\n    z-index: 10;\n    ${props => !props.toogle && 'display: none;'};\n\n    div {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n\n        a {\n            margin: ${props => props.theme.space.lg} 0;\n        }\n    }\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    border: none;\n    cursor: pointer;\n    background-color: ${props => props.theme.color.blue.dark};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    height: 100vh;\n    width: 100vw;\n`;\n\nexport const Button = styled.button`\n    position: absolute;\n    border: none;\n    top: 0;\n    right: 0;\n    margin: ${props => props.theme.space.md};\n    z-index: 10;\n    font-size: ${props => props.theme.typography.xxl};\n    cursor: pointer;\n    background-color: ${props => props.theme.color.blue.dark};\n    color: ${props => props.theme.color.white};\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst color = props => props.theme.color.white;\nconst fontSize = props => props.theme.typography.lg;\nconst space = props => props.theme.space.md;\n\nconst Link = styled(NavLink).attrs({\n    activeClassName: 'active'\n})`\n    padding: ${space};\n    text-decoration: none;\n    color: ${color};\n    border-bottom: 4px solid transparent;\n    height: 100%;\n    font-size: ${fontSize};\n    display: flex;\n    align-items: flex-end;\n\n    &:hover {\n        border-bottom: 4px solid ${color};\n    }\n\n    &.active {\n        border-bottom: 4px solid ${color};\n    }\n`;\n\nexport default Link;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './style';\n\nconst Links = ({ isAuthenticated }) => (\n    <React.Fragment>\n        <Link exact to=\"/\">\n            Home\n        </Link>\n        <Link exact to=\"/contactus\">\n            Contact us\n        </Link>\n        {isAuthenticated === false && (\n            <React.Fragment>\n                <Link exact to=\"/login\">\n                    Login\n                </Link>\n                <Link exact to=\"/register\">\n                    Register\n                </Link>\n            </React.Fragment>\n        )}\n\n        {isAuthenticated === true && (\n            <Link exact to=\"/create-post\">\n                Create post\n            </Link>\n        )}\n    </React.Fragment>\n);\n\nLinks.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n};\n\nexport default Links;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.button`\n    margin: 10px 10px;\n    border: none;\n    padding: ${props => props.theme.space.md};\n    border-radius: ${props => props.theme.space.xs};\n    background-color: ${props => props.theme.color.blue.default};\n\n    &:hover {\n        transform: scale(1.01);\n        background-color: ${props => props.theme.color.blue.light};\n    }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from './style';\n\nconst LogButton = ({ logoutRedux, email }) => (\n    <Wrapper onClick={logoutRedux}>Logout: {email} </Wrapper>\n);\n\nLogButton.propTypes = {\n    logoutRedux: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired\n};\n\nexport default LogButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Button } from './style';\n\nimport Links from '../Links';\nimport LogButton from '../LogButton';\n\nconst CloseButton = ({ handleClick, isAuthenticated, email, logoutRedux }) => (\n    <Container onClick={handleClick}>\n        <Button>\n            <i className=\"far fa-window-close\" />\n        </Button>\n        <div>\n            <Links isAuthenticated={isAuthenticated} />\n            {isAuthenticated && (\n                <LogButton email={email} logoutRedux={logoutRedux} />\n            )}\n        </div>\n    </Container>\n);\n\nCloseButton.propTypes = {\n    handleClick: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool.isRequired,\n    logoutRedux: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired\n};\n\nexport default CloseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from './style';\nimport CloseButton from '../CloseButton';\n\nconst HeaderMobile = ({\n    toogle,\n    handleClick,\n    isAuthenticated,\n    email,\n    logoutRedux\n}) => (\n    <Wrapper toogle={toogle}>\n        <CloseButton\n            handleClick={handleClick}\n            isAuthenticated={isAuthenticated}\n            email={email}\n            logoutRedux={logoutRedux}\n        />\n    </Wrapper>\n);\n\nHeaderMobile.propTypes = {\n    toogle: PropTypes.bool.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool.isRequired,\n    logoutRedux: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired\n};\n\nexport default HeaderMobile;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    align-items: center;\n    background-color: ${props => props.theme.color.blue.dark};\n    background-position: center;\n    background-size: cover;\n    box-shadow: ${props => props.theme.shadow};\n    display: flex;\n    grid-area: header;\n    justify-content: space-between;\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.nav`\n    padding: 0;\n    list-style: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    background-color: ${props => props.theme.color.blue.dark};\n\n    @media (max-width: 600px) {\n        ${props => !props.toogle && 'display: none;'};\n    }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NavWrapper from './style'; // TODO this need to be revised\nimport LogButton from '../LogButton';\nimport Links from '../Links';\n\nconst Nav = ({ isAuthenticated, email, logoutRedux }) => (\n    <NavWrapper>\n        <Links isAuthenticated={isAuthenticated} />\n        {isAuthenticated && (\n            <LogButton email={email} logoutRedux={logoutRedux} />\n        )}\n    </NavWrapper>\n);\n\nNav.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    email: PropTypes.string,\n    logoutRedux: PropTypes.func.isRequired\n};\n\nNav.defaultProps = {\n    email: null\n};\n\nexport default Nav;\n","import styled from 'styled-components';\n\nconst Img = styled.img`\n    width: ${props => props.theme.space.xxl};\n    height: 100%;\n    padding: ${props => props.theme.space.md};\n`;\n\nexport default Img;\n","import React from 'react';\n\nimport image from './logo.png';\nimport Img from './style';\n\nconst Logo = () => <Img src={image} alt=\"about-me-img\" />;\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.button`\n    background: none;\n    border: none;\n    display: none;\n\n    @media (max-width: 600px) {\n        display: unset;\n        color: ${props => props.theme.color.white};\n        margin: ${props => props.theme.space.md};\n        font-size: ${props => props.theme.typography.xxl};\n        cursor: pointer;\n    }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from './style';\n\nconst HamburguerButton = ({ handleClick }) => (\n    <Wrapper onClick={handleClick}>\n        <i className=\"fas fa-bars\" />\n    </Wrapper>\n);\n\nHamburguerButton.propTypes = {\n    handleClick: PropTypes.func.isRequired\n};\n\nexport default HamburguerButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Wrapper from './style';\nimport Nav from '../Nav';\nimport Logo from '../Logo';\nimport HamburguerButton from '../HamburguerButton';\n\nconst HeaderWrapper = ({\n    handleClick,\n    isAuthenticated,\n    email,\n    logoutRedux\n}) => (\n    <Wrapper>\n        <Link to=\"/\">\n            <Logo />\n        </Link>\n        <Nav\n            isAuthenticated={isAuthenticated}\n            email={email}\n            logoutRedux={logoutRedux}\n        />\n        <HamburguerButton handleClick={handleClick} />\n    </Wrapper>\n);\n\nHeaderWrapper.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    logoutRedux: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired\n};\n\nexport default HeaderWrapper;\n","import React from 'react';\nimport HeaderMobile from './HeaderMobile';\nimport HeaderWrapper from './HeaderWrapper';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            toogle: false\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        event.preventDefault();\n        const { toogle } = this.state;\n\n        this.setState({ toogle: !toogle });\n    }\n\n    render() {\n        const { toogle } = this.state;\n        return (\n            <React.Fragment>\n                <HeaderWrapper handleClick={this.handleClick} {...this.props} />\n                <HeaderMobile\n                    handleClick={this.handleClick}\n                    toogle={toogle}\n                    {...this.props}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;\n","const actionTypes = {\n    LOGIN_START: 'LOGIN_START',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_ERROR: 'LOGIN_ERROR',\n    REGISTER_START: 'REGISTER_START',\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n    REGISTER_ERROR: 'REGISTER_ERROR',\n    LOGOUT_START: 'LOGOUT_START',\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n    LOGOUT_ERROR: 'LOGOUT_ERROR'\n};\n\nexport default actionTypes;\n","import axios from 'axios';\n\nconst urlLogin = `${process.env.REACT_APP_API_HOST}/api/login`;\nconst urlRegister = `${process.env.REACT_APP_API_HOST}/api/register`;\nconst urlPost = `${process.env.REACT_APP_API_HOST}/api/post`;\nconst urlContact = `${process.env.REACT_APP_API_HOST}/api/send-email`;\nconst urlGetPosts = `${process.env.REACT_APP_API_HOST}/api/posts/`;\nconst urlGetPost = `${process.env.REACT_APP_API_HOST}/api/post/`;\nconst urlCreateComment = `${process.env.REACT_APP_API_HOST}/api/comment`;\n\nexport function loginService(email, password) {\n    return axios\n        .post(urlLogin, {\n            email,\n            password\n        })\n        .then(response => {\n            localStorage.setItem('token', response.data.token);\n            localStorage.setItem('email', email);\n        });\n}\n\nexport function registerService(email, password) {\n    return axios\n        .post(urlRegister, {\n            email,\n            password\n        })\n        .then(response => {\n            localStorage.setItem('token', response.data.token);\n            localStorage.setItem('email', email);\n        });\n}\n\nexport function logoutService() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n}\n\nexport function createPostService(title, description, text, image) {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('text', text);\n    formData.append('image', image);\n\n    const token = localStorage.getItem('token');\n\n    const headers = {\n        'x-access-token': token,\n        'Content-Type': 'application/x-www-form-urlencoded'\n    };\n\n    const config = {\n        headers\n    };\n\n    return axios.post(urlPost, formData, config);\n}\n\nexport function contactService(name, email, message) {\n    return axios.post(urlContact, {\n        name,\n        email,\n        message\n    });\n}\n\nexport function getPostsService(page, currentPage, isMinus, isPlus) {\n    let curPage = page;\n\n    if (isMinus) {\n        curPage = currentPage - 1;\n    } else if (isPlus) {\n        curPage = currentPage + 1;\n    }\n\n    return axios.get(urlGetPosts + curPage);\n}\n\nexport function getPost(id) {\n    return axios.get(urlGetPost + id);\n}\n\nexport function createCommentService(text, postId) {\n    const params = new URLSearchParams();\n    params.append('text', text);\n    params.append('postId', postId);\n\n    const token = localStorage.getItem('token');\n\n    const headers = {\n        'x-access-token': token,\n        'Content-Type': 'application/x-www-form-urlencoded'\n    };\n\n    const config = {\n        headers\n    };\n\n    return axios.post(urlCreateComment, params, config);\n}\n","import actionTypes from './actionsTypes';\n\nimport { registerService, loginService, logoutService } from '../services/api';\n\n/*\n * action creators\n */\n\nexport function loginError(err) {\n    return {\n        type: actionTypes.LOGIN_ERROR,\n        payload: { err }\n    };\n}\n\nexport function loginSuccess(email) {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: { email }\n    };\n}\n\nexport function loginStart() {\n    return {\n        type: actionTypes.LOGIN_START\n    };\n}\n\nexport function registerError(err) {\n    console.log(err);\n    return {\n        type: actionTypes.REGISTER_ERROR,\n        payload: { err }\n    };\n}\n\nexport function registerSuccess(email) {\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        payload: { email }\n    };\n}\n\nexport function registerStart() {\n    return {\n        type: actionTypes.REGISTER_START\n    };\n}\n\nexport function logoutError() {\n    return {\n        type: actionTypes.LOGOUT_ERROR\n    };\n}\n\nexport function logoutSuccess() {\n    return {\n        type: actionTypes.LOGOUT_SUCCESS\n    };\n}\n\nexport function logoutStart() {\n    return {\n        type: actionTypes.LOGOUT_START\n    };\n}\n\n/*\n * action creators async\n */\n\nexport function login(email, password) {\n    return dispatch => {\n        dispatch(loginStart());\n\n        loginService(email, password).then(\n            () => {\n                dispatch(loginSuccess(email));\n            },\n            err => {\n                dispatch(loginError(err));\n            }\n        );\n    };\n}\n\nexport function register(email, password) {\n    return dispatch => {\n        dispatch(registerStart());\n\n        registerService(email, password).then(\n            () => {\n                dispatch(registerSuccess(email));\n            },\n            err => {\n                dispatch(registerError(err));\n            }\n        );\n    };\n}\n\nexport function logout() {\n    return dispatch => {\n        logoutService();\n\n        dispatch(logoutSuccess());\n    };\n}\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport { logout } from '../../actions';\n\nconst mapStateToProps = ({ isAuthenticated, email }, ownProps) => ({\n    isAuthenticated,\n    email,\n    ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logoutRedux: () => {\n        dispatch(logout());\n    }\n});\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Header)\n);\n","import styled from 'styled-components';\n\nconst Container = styled.main`\n    grid-area: main;\n    min-width: 0;\n    margin: auto 0;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst color = props =>\n    props.active ? props.theme.color.blue.default : props.theme.color.white;\nexport const ContainerPages = styled.div`\n    background-color: ${props => props.theme.color.blue.dark};\n    box-shadow: ${props => props.theme.shadow.gray};\n    padding: ${props => props.theme.space.md};\n    border-radius: ${props => props.theme.space.xs};\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    color: ${props => props.theme.color.white};\n\n    > h1 {\n        text-align: center;\n    }\n`;\n\nexport const PaginationButton = styled.button`\n    background: none;\n    border: none;\n    color: ${color};\n    border-bottom: 4px solid transparent;\n    padding: ${props => props.theme.space.md};\n    margin: 0 ${props => props.theme.space.sm};\n    ${props =>\n        props.active &&\n        `border-bottom: 4px solid ${props.theme.color.blue.default};`};\n\n    &:hover {\n        color: ${props => props.theme.color.blue.default};\n        border-bottom: 4px solid ${props => props.theme.color.blue.default};\n    }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-rows: 175px 3fr 1fr;\n    grid-template-columns: 2fr 2fr 1fr;\n    grid-gap: ${props => props.theme.space.md};\n    padding: ${props => props.theme.space.md};\n    grid-template-areas: 'figure article article' 'figure article article' 'figure . button';\n    background-color: ${props => props.theme.color.blue.dark};\n    box-shadow: ${props => props.theme.shadow.gray};\n    margin: ${props => props.theme.space.lg} 0;\n    border-radius: ${props => props.theme.space.xs};\n\n    @media (max-width: 900px) {\n        grid-template-rows: auto 30px;\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas: 'article article article' '. . button';\n    }\n`;\n\nexport const FigureContainer = styled.div`\n    grid-area: figure;\n\n    @media (max-width: 900px) {\n        display: none;\n    }\n`;\n\nexport const Figure = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    box-shadow: ${props => props.theme.shadow.black};\n\n    @media (max-width: 900px) {\n        display: none;\n    }\n`;\n\nexport const Article = styled.div`\n    grid-area: article;\n\n    > * {\n        margin: 0;\n    }\n\n    > h2 {\n        margin-bottom: ${props => props.theme.space.xs};\n        color: ${props => props.theme.color.blue.default};\n    }\n\n    > h4 {\n        margin-bottom: ${props => props.theme.space.xl};\n        color: ${props => props.theme.color.blue.light};\n    }\n\n    > p {\n        text-align: justify;\n        color: ${props => props.theme.color.white};\n    }\n`;\n\nexport const LinkPost = styled(Link)`\n    grid-area: button;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n`;\n\nexport const Button = styled.button`\n    box-shadow: ${props => props.theme.shadow.black};\n    border: none;\n    background-color: ${props => props.theme.color.blue.default};\n    padding: ${props => props.theme.space.md};\n    border-radius: ${props => props.theme.space.xs};\n\n    &:hover {\n        transform: scale(1.01);\n        background-color: ${props => props.theme.color.blue.light};\n    }\n`;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport {\n    Container,\n    Article,\n    Button,\n    Figure,\n    LinkPost,\n    FigureContainer\n} from './style';\n\nconst formatDate = date => new Date(date).toDateString();\n\nconst Post = ({ _id, title, date, description, image, author }) => (\n    <Container>\n        <Article>\n            <h2>{title}</h2>\n            <h4>\n                {author.email} on {formatDate(date)}\n            </h4>\n            <p>{description}</p>\n        </Article>\n        <FigureContainer>\n            <Figure src={image} alt=\"about-me-img\" />\n        </FigureContainer>\n\n        <LinkPost to={`/post/${_id}`}>\n            <Button>Read more</Button>\n        </LinkPost>\n    </Container>\n);\n\nPost.propTypes = {\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired\n};\n\nexport default Post;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport { ContainerPages, PaginationButton } from './style';\nimport Post from '../Post/Post';\nimport { getPostsService } from '../../../services/api';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: [],\n            currentPage: 0,\n            totalPages: 0\n        };\n\n        this.getPostsPagination = this.getPostsPagination.bind(this);\n\n        this.endpoint = '/api/posts/';\n        this.url = process.env.REACT_APP_API_HOST + this.endpoint;\n    }\n\n    componentDidMount() {\n        this.getPostsPagination(1);\n    }\n\n    getPostsPagination(page, isMinus, isPlus) {\n        const { currentPage } = this.state;\n\n        getPostsService(page, currentPage, isMinus, isPlus).then(response => {\n            this.setState({\n                currentPage: response.data.current,\n                posts: response.data.posts,\n                totalPages: response.data.pages\n            });\n        });\n    }\n\n    render() {\n        const { posts, currentPage, totalPages } = this.state;\n\n        const buttons = [];\n\n        for (let i = 1; i < totalPages + 1; i += 1) {\n            buttons.push(\n                <PaginationButton\n                    key={i}\n                    onClick={() => this.getPostsPagination(i, false, false)}\n                    active={currentPage === i}\n                >\n                    {i}\n                </PaginationButton>\n            );\n        }\n\n        return (\n            <div>\n                {posts.map(post => (\n                    <Post key={post._id} {...post} />\n                ))}\n                {totalPages !== 0 && (\n                    <ContainerPages>\n                        Page {currentPage} of {totalPages}\n                        <div>\n                            {currentPage - 1 > 0 && (\n                                <PaginationButton\n                                    onClick={() =>\n                                        this.getPostsPagination(0, true, false)\n                                    }\n                                >\n                                    Previous\n                                </PaginationButton>\n                            )}\n                            {buttons}\n                            {currentPage < totalPages && (\n                                <PaginationButton\n                                    onClick={() =>\n                                        this.getPostsPagination(0, false, true)\n                                    }\n                                >\n                                    Next\n                                </PaginationButton>\n                            )}\n                        </div>\n                    </ContainerPages>\n                )}\n            </div>\n        );\n    }\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-rows: 500px auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: ${props => props.theme.space.md};\n    padding: ${props => props.theme.space.md};\n    grid-template-areas: 'figure figure figure' 'article article article';\n    background-color: ${props => props.theme.color.blue.dark};\n    box-shadow: ${props => props.theme.shadow.gray};\n    margin: ${props => props.theme.space.lg} 0;\n    border-radius: ${props => props.theme.space.xs};\n\n    @media (max-width: 900px) {\n        grid-template-rows: 1fr auto;\n    }\n`;\n\nexport const FigureContainer = styled.div`\n    grid-area: figure;\n`;\n\nexport const Figure = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    box-shadow: ${props => props.theme.shadow.black};\n`;\n\nexport const Article = styled.div`\n    grid-area: article;\n\n    > * {\n        margin: 0;\n    }\n\n    > h2 {\n        margin-bottom: ${props => props.theme.space.xs};\n        color: ${props => props.theme.color.blue.default};\n    }\n\n    > h4 {\n        margin-bottom: ${props => props.theme.space.xl};\n        color: ${props => props.theme.color.blue.light};\n    }\n\n    > p {\n        text-align: justify;\n        color: ${props => props.theme.color.white};\n    }\n`;\n\nexport const Comment = styled.div`\n    width: 100%;\n\n    padding: ${props => props.theme.space.md};\n    margin-bottom: ${props => props.theme.space.lg};\n    box-shadow: ${props => props.theme.shadow.black};\n`;\n\nexport const CommentSection = styled.div`\n    width: 100%;\n\n    padding: ${props => props.theme.space.md};\n    margin-bottom: ${props => props.theme.space.lg};\n    box-shadow: ${props => props.theme.shadow.black};\n`;\n","import styled from 'styled-components';\n\nconst borderRadius = props => props.theme.space.md;\nconst shadowBlack = props => props.theme.shadow.black;\nconst colorWhite = props => props.theme.color.white;\nconst colorBlack = props => props.theme.color.black;\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    background-color: ${colorWhite};\n    display: flex;\n    position: relative;\n    box-shadow: ${shadowBlack};\n\n    @media (max-width: 800px) {\n        flex-direction: column;\n    }\n`;\n\nexport const WrapperTitle = styled.div`\n    position: absolute;\n    background-color: ${props => props.theme.color.blue.light};\n    top: ${props => props.theme.space.lg};\n    left: -${props => props.theme.space.lg};\n    padding: ${props => props.theme.space.sm} ${props => props.theme.space.xl};\n    text-transform: uppercase;\n    box-shadow: ${shadowBlack};\n`;\n\nexport const Form = styled.form`\n    padding: ${props => props.theme.space.xxl} ${props => props.theme.space.xl}\n        ${props => props.theme.space.xl} ${props => props.theme.space.xl};\n    border-radius: ${borderRadius};\n    display: flex;\n    flex-direction: column;\n    color: ${colorBlack};\n    z-index: 2;\n    width: 100%;\n\n    > h1 {\n        text-align: center;\n    }\n\n    @media (max-width: 800px) {\n        width: 100%;\n    }\n`;\nexport const Column = styled.div`\n    flex: 1;\n    position: relative;\n`;\n\nexport const Figure = styled.img`\n    max-width: 50%;\n    max-height: 20%;\n    object-fit: cover;\n\n    @media (max-width: 800px) {\n        position: absolute;\n        z-index: -1; /* To test */\n        right: 0;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: ${props => props.theme.color.blue.dark};\n    font-size: ${props => props.theme.typography.md};\n    margin-top: ${props => props.theme.space.xl};\n`;\n\nexport const ErrorLabel = styled.span`\n    margin-bottom: 1rem;\n\n    > div {\n        color: ${props => props.theme.color.red.light};\n        font-size: ${props => props.theme.typography.xxs};\n    }\n`;\n\nexport const Button = styled.button`\n    grid-area: button;\n    box-shadow: ${shadowBlack};\n    border: none;\n    background-color: ${props => props.theme.color.blue.default};\n    padding: 15px;\n    margin: 10px 0;\n    color: ${colorWhite};\n    margin-top: ${props => props.theme.space.xxl};\n    border-radius: ${props => props.theme.space.xl};\n\n    &:disabled,\n    &[disabled]:hover {\n        background-color: ${props => props.theme.color.blue.default};\n        transform: scale(1);\n        color: ${colorWhite};\n    }\n\n    &:hover {\n        transform: scale(1.01);\n        background-color: ${props => props.theme.color.blue.dark};\n    }\n`;\n\nexport const WrapperButton = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const Input = styled.input`\n    border: none;\n    background: transparent;\n    border-bottom: 1px solid ${props => props.theme.color.gray.light};\n    outline: none;\n    padding: ${props => props.theme.space.md} 0;\n    font-size: ${props => props.theme.typography.xs};\n    box-shadow: none;\n\n    :focus {\n        border-bottom: 1px solid ${props => props.theme.color.blue.default};\n    }\n\n    :invalid {\n        border-bottom: 1px solid ${props => props.theme.color.red.light};\n    }\n\n    :required {\n    }\n`;\n\nexport const TextArea = styled.textarea`\n    border: none;\n    background: transparent;\n    border-bottom: 1px solid ${props => props.theme.color.gray.light};\n    outline: none;\n\n    :focus {\n        border-bottom: 1px solid ${props => props.theme.color.blue.default};\n    }\n`;\n\nexport const Alert = styled.div`\n    box-shadow: ${shadowBlack};\n    padding: 10px;\n    border-radius: ${borderRadius};\n    text-align: center;\n    ${props =>\n        !props.error && `background-color:  ${props.theme.color.red.light};`};\n    ${props =>\n        props.error &&\n        `background-color:  ${props.theme.color.blue.default};`};};\n`;\n\nexport const Image = styled.img`\n    border-radius: ${borderRadius};\n    ${props => props.src && 'width: 20rem;height: 20rem;'};\n    background-color: ${props => props.theme.color.gray.dark};\n`;\n\nexport const LabelFile = styled.label`\n    box-shadow: ${props => props.theme.shadow.dark};\n    border: none;\n    background-color: ${props => props.theme.color.blue.default};\n    padding: ${props => props.theme.space.lg};\n    margin: ${props => props.theme.space.md} 0;\n    border-radius: ${borderRadius};\n    text-align: center;\n    cursor: pointer;\n    color: ${props => props.theme.color.white};\n\n    &:hover {\n        transform: scale(1.01);\n        background-color: ${props => props.theme.color.blue.dark};\n    }\n\n    > input[type='file'] {\n        width: 100%;\n        height: 100%;\n        display: none;\n    }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\n\nimport PropTypes from 'prop-types';\nimport {\n    Label,\n    ErrorLabel,\n    Form,\n    Button,\n    WrapperTitle,\n    Wrapper,\n    Input,\n    WrapperButton\n} from './style';\nimport { createCommentService } from '../../../services/api';\n\nfunction createComment(values, postId, { resetForm }) {\n    const { text } = values;\n\n    createCommentService(text, postId).then(\n        () => {\n            resetForm();\n        },\n        () => {\n            resetForm();\n        }\n    );\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.text) {\n        errors.text = 'Required';\n    }\n\n    return errors;\n}\n\nconst CommentFormik = ({ postId }) => (\n    <Wrapper>\n        <Formik\n            initialValues={{\n                text: ''\n            }}\n            validate={values => validate(values)}\n            onSubmit={(values, ...rest) =>\n                createComment(values, postId, ...rest)\n            }\n            render={({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                dirty\n            }) => (\n                <Form onSubmit={handleSubmit}>\n                    <WrapperTitle>\n                        <h3>Comment</h3>\n                    </WrapperTitle>\n                    <Label htmlFor=\"text\">\n                        Text\n                        <Input\n                            type=\"text\"\n                            name=\"text\"\n                            placeholder=\"Text\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.name}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {touched.name &&\n                            errors.name && <div>{errors.name}</div>}\n                    </ErrorLabel>\n\n                    <WrapperButton>\n                        <Button\n                            type=\"submit\"\n                            disabled={\n                                (Object.keys(errors).length !== 0 &&\n                                    !isSubmitting) ||\n                                !dirty\n                            }\n                        >\n                            Create comment\n                        </Button>\n                    </WrapperButton>\n                </Form>\n            )}\n        />\n    </Wrapper>\n);\n\nCommentFormik.propTypes = {\n    postId: PropTypes.number.isRequired\n};\n\nexport default CommentFormik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Container,\n    Article,\n    Figure,\n    FigureContainer,\n    Comment,\n    CommentSection\n} from './style';\nimport { getPost } from '../../../services/api';\nimport CommentFormik from '../Forms/CommentFormik';\n\nconst formatDate = date => new Date(date).toDateString();\n\nclass PostDetailed extends React.Component {\n    // This type of constructor is useful basically is doing {match} = this.props.match\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            post: {},\n            author: {},\n            comments: []\n        };\n    }\n\n    componentDidMount() {\n        this.getPost();\n    }\n\n    getPost() {\n        const {\n            match: {\n                params: { id }\n            }\n        } = this.props;\n\n        getPost(id).then(response => {\n            this.setState({\n                post: response.data,\n                author: response.data.author,\n                comments: response.data.comments\n            });\n        });\n    }\n\n    render() {\n        const { post, author, comments } = this.state;\n        const { title, date, text, image } = post;\n        const {\n            match: {\n                params: { id }\n            }\n        } = this.props;\n\n        return (\n            <React.Fragment>\n                <Container>\n                    <Article>\n                        <h2>{title}</h2>\n                        <h4>\n                            {author.email} on {formatDate(date)}\n                        </h4>\n                        <p>{text}</p>\n                    </Article>\n                    <FigureContainer>\n                        <Figure src={image} alt=\"about-me-img\" />\n                    </FigureContainer>\n                </Container>\n\n                <CommentFormik postId={id} />\n\n                <CommentSection>\n                    <h3>Comments section</h3>\n\n                    {comments.length === 0 && (\n                        <h6>\n                            There are no comments yet *Login to be able to\n                            comment\n                        </h6>\n                    )}\n\n                    {comments.map(comment => (\n                        <Comment>\n                            <p>Author: {comment.author.email}</p>\n                            <p>text: {comment.text}</p>\n                        </Comment>\n                    ))}\n                </CommentSection>\n            </React.Fragment>\n        );\n    }\n}\n\nPostDetailed.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({ id: PropTypes.number.isRequired })\n    }).isRequired\n};\n\nexport default PostDetailed;\n","import React from 'react';\nimport { Formik } from 'formik';\n\nimport {\n    Label,\n    ErrorLabel,\n    Form,\n    Button,\n    WrapperTitle,\n    Wrapper,\n    Figure,\n    Input,\n    WrapperButton,\n    TextArea,\n    Alert\n} from './style';\nimport { contactService } from '../../../services/api';\n\nfunction sendMessage(values, { resetForm }) {\n    const { name, email, message } = values;\n\n    contactService(name, email, message).then(\n        () => {\n            resetForm();\n        },\n        () => {\n            resetForm();\n        }\n    );\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!values.message) {\n        errors.message = 'Required';\n    }\n\n    if (!values.name) {\n        errors.name = 'Required';\n    }\n\n    return errors;\n}\n\nconst ContactFormik = () => (\n    <Wrapper>\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                message: ''\n            }}\n            validate={values => validate(values)}\n            onSubmit={(values, ...rest) => sendMessage(values, ...rest)}\n            render={({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                dirty\n            }) => (\n                <Form onSubmit={handleSubmit}>\n                    <WrapperTitle>\n                        <h3>Contact us</h3>\n                    </WrapperTitle>\n                    <Label htmlFor=\"name\">\n                        Name\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.name}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {touched.name &&\n                            errors.name && <div>{errors.name}</div>}\n                    </ErrorLabel>\n\n                    <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {touched.email &&\n                            errors.email && <div>{errors.email}</div>}\n                    </ErrorLabel>\n\n                    <Label htmlFor=\"message\">\n                        Message\n                        <TextArea\n                            name=\"message\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.message}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {touched.message &&\n                            errors.message && <div>{errors.message}</div>}\n                    </ErrorLabel>\n\n                    {isSubmitting && <Alert error>Sent with success</Alert>}\n\n                    <WrapperButton>\n                        <Button\n                            type=\"submit\"\n                            disabled={\n                                (Object.keys(errors).length !== 0 &&\n                                    !isSubmitting) ||\n                                !dirty\n                            }\n                        >\n                            Send message\n                        </Button>\n                    </WrapperButton>\n                </Form>\n            )}\n        />\n        <Figure\n            src=\"https://images.unsplash.com/photo-1523966211575-eb4a01e7dd51?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=1ab326a2c7bef3a9641e7c7c89c2919c&dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb\"\n            alt=\"about-me-img\"\n        />\n    </Wrapper>\n);\n\nexport default ContactFormik;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport {\n    Label,\n    ErrorLabel,\n    Form,\n    Button,\n    WrapperTitle,\n    Wrapper,\n    Figure,\n    Input,\n    WrapperButton,\n    Alert\n} from './style';\n\nfunction handleRegister(values, register, { resetForm }) {\n    const { email, password } = values;\n    register(email, password);\n    resetForm();\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!values.password) {\n        errors.password = 'Required';\n    }\n\n    return errors;\n}\n\nconst RegisterFormik = ({ register, errorMessage }) => (\n    <Wrapper>\n        <Formik\n            initialValues={{\n                email: '',\n                password: ''\n            }}\n            validate={values => validate(values)}\n            onSubmit={(values, ...rest) =>\n                handleRegister(values, register, ...rest)\n            }\n            render={({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                dirty\n            }) => (\n                <Form onSubmit={handleSubmit}>\n                    <WrapperTitle>\n                        <h3>Register</h3>\n                    </WrapperTitle>\n\n                    <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {' '}\n                        {touched.email &&\n                            errors.email && <div>{errors.email}</div>}\n                    </ErrorLabel>\n\n                    <Label htmlFor=\"password\">\n                        Password\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                        />\n                    </Label>\n\n                    <ErrorLabel>\n                        {' '}\n                        {touched.password &&\n                            errors.password && <div>{errors.password}</div>}\n                    </ErrorLabel>\n\n                    {errorMessage && <Alert error>{errorMessage}</Alert>}\n\n                    <WrapperButton>\n                        <Button\n                            type=\"submit\"\n                            disabled={\n                                (Object.keys(errors).length !== 0 &&\n                                    !isSubmitting) ||\n                                !dirty\n                            }\n                        >\n                            Register\n                        </Button>\n                    </WrapperButton>\n                </Form>\n            )}\n        />\n        <Figure\n            src=\"https://images.unsplash.com/photo-1534067783941-51c9c23ecefd?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=d15da0da74c68d59d0b9c68e501941c7&dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb\"\n            alt=\"about-me-img\"\n        />\n    </Wrapper>\n);\n\nRegisterFormik.propTypes = {\n    register: PropTypes.func.isRequired,\n    errorMessage: PropTypes.string\n};\n\nexport default RegisterFormik;\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\n\nimport {\n    Label,\n    ErrorLabel,\n    Form,\n    Button,\n    Image,\n    LabelFile,\n    WrapperTitle,\n    Wrapper,\n    Figure,\n    Input,\n    TextArea,\n    WrapperButton\n} from './style';\nimport { createPostService } from '../../../services/api';\n\nfunction createPost(values, { resetForm }) {\n    const { title, description, text, image } = values;\n\n    createPostService(title, description, text, image).then(\n        () => {\n            resetForm();\n            document.querySelector('input[type=file]').value = '';\n        },\n        () => {\n            resetForm();\n            document.querySelector('input[type=file]').value = '';\n        }\n    );\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.title) {\n        errors.title = 'Required';\n    }\n\n    if (!values.description) {\n        errors.description = 'Required';\n    }\n\n    if (!values.text) {\n        errors.text = 'Required';\n    }\n\n    if (!values.image) {\n        errors.image = 'Required';\n    }\n\n    return errors;\n}\n\nclass CreatePostFormik extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: null\n        };\n    }\n\n    imagePreview(event) {\n        this.setState({\n            file: URL.createObjectURL(event.target.files[0])\n        });\n    }\n\n    render() {\n        const { file } = this.state;\n        return (\n            <Wrapper>\n                <Formik\n                    initialValues={{\n                        title: '',\n                        description: '',\n                        text: '',\n                        image: ''\n                    }}\n                    validate={values => validate(values)}\n                    onSubmit={(values, ...rest) => createPost(values, ...rest)}\n                    render={({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        dirty,\n                        setFieldValue\n                    }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <WrapperTitle>\n                                <h3>Create your post</h3>\n                            </WrapperTitle>\n                            <Label htmlFor=\"title\">\n                                Title\n                                <Input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.title}\n                                />\n                            </Label>\n                            <ErrorLabel>\n                                {' '}\n                                {touched.title &&\n                                    errors.title && <div>{errors.title}</div>}\n                            </ErrorLabel>\n\n                            <Label htmlFor=\"description\">\n                                Description\n                                <TextArea\n                                    name=\"description\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.description}\n                                />\n                            </Label>\n                            <ErrorLabel>\n                                {' '}\n                                {touched.description &&\n                                    errors.description && (\n                                        <div>{errors.description}</div>\n                                    )}\n                            </ErrorLabel>\n\n                            <Label htmlFor=\"text\">\n                                Text\n                                <TextArea\n                                    name=\"text\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.text}\n                                />\n                            </Label>\n                            <ErrorLabel>\n                                {' '}\n                                {touched.text &&\n                                    errors.text && <div>{errors.text}</div>}\n                            </ErrorLabel>\n\n                            <LabelFile htmlFor=\"image\">\n                                Image\n                                <Input\n                                    id=\"image\"\n                                    name=\"image\"\n                                    type=\"file\"\n                                    onChange={event => {\n                                        this.imagePreview(event);\n\n                                        setFieldValue(\n                                            'image',\n                                            event.currentTarget.files[0]\n                                        );\n                                    }}\n                                />\n                            </LabelFile>\n\n                            <Image src={file} />\n                            <WrapperButton>\n                                <Button\n                                    type=\"submit\"\n                                    disabled={\n                                        (Object.keys(errors).length !== 0 &&\n                                            !isSubmitting) ||\n                                        !dirty\n                                    }\n                                >\n                                    Send message\n                                </Button>\n                            </WrapperButton>\n                        </Form>\n                    )}\n                />\n                <Figure\n                    src=\"https://images.unsplash.com/photo-1503958014551-3b41f69234d9?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=df7263d198f3e94e3dc7cb8621d7a821&dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb\"\n                    alt=\"about-me-img\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default CreatePostFormik;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { PropTypes } from 'prop-types';\n\nimport {\n    Label,\n    ErrorLabel,\n    Form,\n    Button,\n    WrapperTitle,\n    Wrapper,\n    Figure,\n    Input,\n    WrapperButton,\n    Alert\n} from './style';\n\nfunction handleLogin(values, login, { resetForm }) {\n    const { email, password } = values;\n    login(email, password);\n    resetForm();\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!values.password) {\n        errors.password = 'Required';\n    }\n\n    return errors;\n}\n\nconst LoginFormik = ({ login, errorMessage }) => (\n    <Wrapper>\n        <Formik\n            initialValues={{\n                email: '',\n                password: ''\n            }}\n            validate={values => validate(values)}\n            onSubmit={(values, ...rest) => handleLogin(values, login, ...rest)}\n            render={({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                dirty\n            }) => (\n                <Form onSubmit={handleSubmit}>\n                    <WrapperTitle>\n                        <h3>Login</h3>\n                    </WrapperTitle>\n\n                    <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                    </Label>\n                    <ErrorLabel>\n                        {' '}\n                        {touched.email &&\n                            errors.email && <div>{errors.email}</div>}\n                    </ErrorLabel>\n\n                    <Label htmlFor=\"password\">\n                        Password\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                        />\n                    </Label>\n\n                    <ErrorLabel>\n                        {' '}\n                        {touched.password &&\n                            errors.password && <div>{errors.password}</div>}\n                    </ErrorLabel>\n\n                    {errorMessage && <Alert>{errorMessage}</Alert>}\n\n                    <WrapperButton>\n                        <Button\n                            type=\"submit\"\n                            disabled={\n                                (Object.keys(errors).length !== 0 &&\n                                    !isSubmitting) ||\n                                !dirty\n                            }\n                        >\n                            Login\n                        </Button>\n                    </WrapperButton>\n                </Form>\n            )}\n        />\n        <Figure\n            src=\"https://images.unsplash.com/photo-1509702713478-5441be3d911c?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=68772eda63c07b218f50935b78067a04&dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb\"\n            alt=\"about-me-img\"\n        />\n    </Wrapper>\n);\n\nLoginFormik.propTypes = {\n    login: PropTypes.func.isRequired,\n    errorMessage: PropTypes.string\n};\n\nexport default LoginFormik;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Container from './style';\nimport Home from './Home/Home';\nimport PostDetailed from './PostDetailed/PostDetailed';\nimport ContactFormik from './Forms/ContactFormik';\nimport RegisterFormik from './Forms/RegisterFormik';\nimport CreatePostFormik from './Forms/CreatePostFormik';\nimport LoginFormik from './Forms/LoginFormik';\n\nconst RouteUnauthenticated = ({ isAuthenticated, ...props }) =>\n    !isAuthenticated ? <Route {...props} /> : <Redirect to=\"/\" />;\n\nconst RouteAuthenticated = ({ isAuthenticated, ...props }) =>\n    isAuthenticated ? <Route {...props} /> : <Redirect to=\"/\" />;\n\nRouteUnauthenticated.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n};\n\nRouteAuthenticated.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n};\n\n// Use render instead of component to pass props\nconst Main = props => (\n    <Container>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/contactus\" component={ContactFormik} />\n            <RouteUnauthenticated\n                {...props}\n                exact\n                path=\"/login\"\n                render={() => <LoginFormik {...props} />}\n            />\n            <RouteUnauthenticated\n                {...props}\n                exact\n                path=\"/register\"\n                render={() => <RegisterFormik {...props} />}\n            />\n            <RouteAuthenticated\n                {...props}\n                exact\n                path=\"/create-post\"\n                render={() => <CreatePostFormik {...props} />}\n            />\n            <Route exact path=\"/post/:id\" component={PostDetailed} {...props} />\n        </Switch>\n    </Container>\n);\n\nexport default Main;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Main from './Main';\nimport { login, register } from '../../actions';\n\nconst mapStateToProps = (\n    { isAuthenticated, email, errorMessage },\n    ownProps\n) => ({\n    isAuthenticated,\n    email,\n    errorMessage,\n    ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    login: (email, password) => {\n        dispatch(login(email, password));\n    },\n    register: (email, password) => {\n        dispatch(register(email, password));\n    }\n});\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import styled from 'styled-components';\n\nconst Container = styled.footer`\n    grid-area: footer;\n    background-color: ${props => props.theme.color.blue.dark};\n    box-shadow: ${props => props.theme.shadow};\n    padding: ${props => props.theme.space.lg};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: ${props => props.theme.color.white};\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst Link = styled.a`\n    padding: ${props => props.theme.space.md};\n    display: inline-block;\n    transition: 0.3s;\n    font-weight: bold;\n    text-decoration: none;\n    color: ${props => props.theme.color.white};\n    margin: 0 ${props => props.theme.space.md};\n    margin-bottom: ${props => props.theme.space.md};\n\n    &:hover {\n        transform: scale(1.2);\n    }\n`;\n\nexport default Link;\n","import React from 'react';\n\nimport Link from './style';\n\nconst Links = () => (\n    <div>\n        <Link href=\"https://github.com/joaopedrodcf\">\n            <i className=\"fab fa-github fa-2x\" />\n        </Link>\n        <Link href=\"https://www.linkedin.com/in/joaoferr93\">\n            <i className=\"fab fa-linkedin fa-2x\" />\n        </Link>\n        <Link href=\"https://twitter.com/Joaopedrodcf\">\n            <i className=\"fab fa-twitter-square fa-2x\" />\n        </Link>\n        <Link href=\"https://medium.com/@joaoferr93\">\n            <i className=\"fab fa-medium fa-2x\" />\n        </Link>\n    </div>\n);\n\nexport default Links;\n","import React from 'react';\nimport Container from './style';\nimport Links from './Links/Links';\n\nconst Footer = () => (\n    <Container>\n        <Links />\n        <div>© João Ferreira 2018</div>\n    </Container>\n);\n\nexport default Footer;\n","const theme = {\n    color: {\n        blue: {\n            default: '#0074D9',\n            light: '#7FDBFF',\n            dark: '#001f3f'\n        },\n        gray: {\n            light: '#DDDDDD',\n            dark: '#AAAAAA'\n        },\n        red: {\n            light: '#FF4136',\n            dark: '#85144b'\n        },\n        black: '#111111',\n        yellow: '#FF4136',\n        white: '#FFFFFF'\n    },\n    typography: {\n        xxs: '1.2rem',\n        xs: '1.4rem',\n        sm: '1.6rem',\n        md: '1.8rem',\n        lg: '2rem',\n        xl: '2.4rem',\n        xxl: '2.8rem',\n        xxxl: '3.2rem'\n    },\n    space: {\n        xs: '0.2rem',\n        sm: '0.4rem',\n        md: '0.8rem',\n        lg: '1.6rem',\n        xl: '3.2rem',\n        xxl: '6.4rem'\n    },\n    shadow: {\n        gray: '0 0.2rem 0.4rem #AAAAAA',\n        black: '0 0.2rem 0.4rem #111111'\n    }\n};\n\nexport default theme;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Global from './style';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport MainContainer from './components/Main/MainContainer';\nimport Footer from './components/Footer/Footer';\nimport theme from './theme';\n\nconst Routes = () => (\n    <ThemeProvider theme={theme}>\n        <Global>\n            <HeaderContainer />\n            <MainContainer />\n            <Footer />\n        </Global>\n    </ThemeProvider>\n);\n\nexport default Routes;\n","import actionTypes from '../actions/actionsTypes';\n\nconst authentication = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {\n                ...state\n            };\n        case actionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                errorMessage: 'success',\n                email: action.payload.email\n            };\n        case actionTypes.LOGIN_ERROR:\n            return {\n                ...state,\n                errorMessage: action.payload.err.response.data.message\n            };\n        case actionTypes.REGISTER_START:\n            return {\n                ...state\n            };\n        case actionTypes.REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                errorMessage: 'success',\n                email: action.payload.email\n            };\n        case actionTypes.REGISTER_ERROR:\n            return {\n                ...state,\n                errorMessage: 'The user already exists' // needs dev in BE to pass error message correctly\n            };\n        case actionTypes.LOGOUT_START:\n            return {\n                ...state\n            };\n        case actionTypes.LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            };\n        case actionTypes.LOGOUT_ERROR:\n            return {\n                ...state\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authentication;\n","import { injectGlobal } from 'styled-components';\nimport theme from './theme';\n\nconst globalCss = injectGlobal`\n    body,\n    html,\n    #root {\n        height: 100%;\n        font-size: 62.5%;\n    }\n\n    * {\n        box-sizing: border-box;\n        font-size: ${theme.typography.sm};\n        padding: 0;\n        margin: 0;\n        font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n    }\n\n    h1 {\n        font-size: ${theme.typography.xxxl};\n    }\n\n    h2 {\n        font-size: ${theme.typography.xxl};\n    }\n\n    h3 {\n        font-size: ${theme.typography.xl};\n    }\n\n    h4 {\n        font-size: ${theme.typography.lg};\n    }\n\n    h5 {\n        font-size: ${theme.typography.md};\n    }\n\n    p {\n        font-size: ${theme.typography.md};\n    }\n\n    a {\n        font-size: ${theme.typography.xxs};\n        outline: none;\n    }\n`;\n/*\n    *:not(path):not(g) {\n        color: hsla(210, 100%, 100%, 0.9) !important;\n        background: hsla(210, 100%, 50%, 0.5) !important;\n        outline: solid 0.25rem hsla(210, 100%, 100%, 0.5) !important;\n        box-shadow: none !important;\n    }\n*/\n\nexport default globalCss;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter } from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport Routes from './Routes';\nimport reducers from './reducers';\nimport './globalStyle';\n\nconst initialState = {\n    isAuthenticated: !!localStorage.getItem('token'),\n    email: localStorage.getItem('email')\n};\n\nconst store = createStore(\n    reducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware, logger))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <Routes />\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}